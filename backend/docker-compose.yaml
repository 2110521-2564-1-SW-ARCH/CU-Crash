version: '3'
networks:
  kong-net:
    driver: bridge
 
services:
  #######################
  ###   app service   ###
  #######################
  # api-service:
  #   build: ./app
  #   networks:
  #     - kong-net
  #   expose:
  #     - 5567
  #   ports:
  #     - 5567:5567

  #######################
  ###    Rabbit MQ    ###
  #######################
  crash-rabbit:
    container_name: crash-rabbit
    image: rabbitmq:3-management
    restart: always
    ports:
      - 5672:5672
      - 8080:15672

  #######################
  ###      Kong DB    ###
  #######################
  kong-database:
    container_name: kong-database
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  #######################
  ### Kong migration  ###
  #######################
  kong-migration:
    image: kong:latest
    depends_on:
      - "kong-database"
    container_name: kong-migration
    networks:
      - kong-net
    restart: on-failure
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
    command: kong migrations bootstrap
 
  #######################
  ###      Kong       ###
  #######################
  kong:
    container_name: kong
    image: kong:latest
    depends_on:
      - "kong-migration"
      - "kong-database"
    restart: always
    networks:
      - kong-net
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
    ports:
      - 8000:8000
      - 8001:8001
      - 8443:8443
      - 8444:8444
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 5s
      retries: 10

  #######################
  ###  Konga prepare  ###
  #######################
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  #######################
  ###    Konga GUI    ###
  #######################
  konga:
    image: pantsel/konga:latest
    container_name: konga
    restart: always
    networks:
        - kong-net   
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
      - kong
      - konga-prepare
    ports:
      - 1337:1337